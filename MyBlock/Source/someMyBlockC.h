#ifndef _SOMEMYBLOCKC_H_
#define _SOMEMYBLOCKC_H_

/*==============================================================================
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************
#include <new>
#include "ccBlockHandle.h"
#include "ccBlockPoolCentral.h"

namespace Some
{

//******************************************************************************
//******************************************************************************
//******************************************************************************

class MyBlockC : public CC::HasBlockHandle
{
public:

   MyBlockC();
  ~MyBlockC();

   void method1C();

   int mCode1A;
  
   //--------------------------------------------------------------------------
   //--------------------------------------------------------------------------
   //--------------------------------------------------------------------------
   // This allocates a block from the block pool and uses placement new
   // to call the class constructor. It is analogous to new.

   static MyBlockC* allocateC();

   //--------------------------------------------------------------------------
   //--------------------------------------------------------------------------
   //--------------------------------------------------------------------------
   // This deallocates the object back to the block pool. It does not call
   // a destructor for the object.
   void deallocateC();

};

//******************************************************************************
}//namespace

#endif

