#ifndef _SOMEMYBLOCK_H_
#define _SOMEMYBLOCK_H_

/*==============================================================================
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************
#include <new>
#include "ccMemHandle.h"
#include "ccMemPoolIndex.h"
#include "ccMemPool.h"

namespace Some
{

//******************************************************************************
//******************************************************************************
//******************************************************************************

class MyBlock : public CC::HasMemHandle
{
public:

   MyBlock();
  ~MyBlock();

   void method1A();

   int mCode1A;
  
   //--------------------------------------------------------------------------
   //--------------------------------------------------------------------------
   //--------------------------------------------------------------------------
   // This allocates a block from the block pool and uses placement new
   // to call the class constructor. It is analogous to new.

   static MyBlock* allocate();

   //--------------------------------------------------------------------------
   //--------------------------------------------------------------------------
   //--------------------------------------------------------------------------
   // This deallocates the object back to the block pool. It does not call
   // a destructor for the object.
   void deallocate();

};

//******************************************************************************
}//namespace

#endif

