#ifndef _SOMEMYTREEBLOCK_H_
#define _SOMEMYTREEBLOCK_H_

/*==============================================================================
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************
#include "ccTreeNode.h"

namespace Some
{

//******************************************************************************
//******************************************************************************
//******************************************************************************

class MyTreeBlock : public CC::TreeNode
{
public:

   //---------------------------------------------------------------------------
   //---------------------------------------------------------------------------
   //---------------------------------------------------------------------------
   // Memory management, constructors and destructors.

   // Allocate or deallocate a block from the block pool.
   static void* operator new      (size_t sz);
   static void  operator delete   (void* ptr);

   // Constructors.
   MyTreeBlock();
   MyTreeBlock(int aIdentifier);

   //---------------------------------------------------------------------------
   //---------------------------------------------------------------------------
   //---------------------------------------------------------------------------
   // Class members

   int  mCode1;
   int  mCode2;
   int  mCode3;
   int  mCode4;

   void method1A();
};

//******************************************************************************
}//namespace

#endif

