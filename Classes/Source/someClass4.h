#ifndef _SOMECLASS4_H_
#define _SOMECLASS4_H_

/*==============================================================================
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "prnPrint.h"
#include "risCallPointer.h"

namespace Some
{

//******************************************************************************
//******************************************************************************
//******************************************************************************

class Base4
{
public:

   Base4()
   {
      mBaseCode1=0;
   }

   virtual void base_method()
   {
      Prn::print(0, "Base4::base_method %d",mBaseCode1);
   }

   int mBaseCode1;
};

//******************************************************************************
//******************************************************************************
//******************************************************************************

template <class BlockClass>
class Class4A : public Base4
{
public:

   Class4A()
   {
   }

   void base_method()
   {
      Prn::print(0, "Class4A::base_method %d",mBaseCode1);
   }

   void method4A()
   {
      Prn::print(0, "Class4A::method4A %d",mCode1);
   }

   static int mCode1;
};

//******************************************************************************
//******************************************************************************
//******************************************************************************

class Class4B : public Class4A<Class4B>
{
public:

   Class4B();
   void method4B();

};

//******************************************************************************
//******************************************************************************
//******************************************************************************

inline void testClass4A(Base4* aX)
{
   aX->base_method();
}

//******************************************************************************
}//namespace

#endif

