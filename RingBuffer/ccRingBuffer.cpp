/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "stdafx.h"

#include "ccCriticalSection.h"
#include "cc_functions.h"
#include "ccDefs.h"
#include "ccMemoryPtr.h"
#include "ccRingBuffer.h"

using namespace std;

namespace CC
{
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
// Constructor, initialize members for an empty stack of size zero 


void BaseRingBuffer::reset()
{
   // All null
   mMajorMod = 0;
   mMinorMod = 0;
   mElementSize = 0;
   mElements = 0;
   mMajorIndex = 0;
   mEmpty = 0;
}


//******************************************************************************
//******************************************************************************
//******************************************************************************
// Return a pointer to an element, based on an index modulo the minor
// modulus.

void* BaseRingBuffer::elementAt(int aIndex)
{
   return (void*)((char*)mElements + mElementSize*(aIndex % mMinorMod));
}


//***************************************************************************
//***************************************************************************
//***************************************************************************
}//namespace