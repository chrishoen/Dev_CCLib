#include "stdafx.h"


#include "CmdLineExec.h"

#include "someRingParms.h"
#include "someRingReaderThread.h"
#include "someRingWriterThread.h"
#include "someMonitorThread1.h"
#include "someMonitorThread2.h"
using namespace Some;

//******************************************************************************
//******************************************************************************
//******************************************************************************
CmdLineExec::CmdLineExec()
{
}
//******************************************************************************
//******************************************************************************
//******************************************************************************
void CmdLineExec::reset()
{
}
//******************************************************************************
//******************************************************************************
//******************************************************************************

void CmdLineExec::execute(Ris::CmdLineCmd* aCmd)
{
   if (aCmd->isCmd("TP"))   Some::gRingWriterThread->mTPFlag = aCmd->argBool(1);
   if (aCmd->isCmd("T"))    Some::gRingWriterThread->mTPFlag = true;

   if (aCmd->isCmd("GO1"))  executeGo1(aCmd);
   if (aCmd->isCmd("GO2"))  executeGo2(aCmd);
   if (aCmd->isCmd("GO3"))  executeGo3(aCmd);
   if (aCmd->isCmd("Parms"))  executeParms(aCmd);
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void CmdLineExec::special(int aSpecial)
{
   if (gMonitorThread1) gMonitorThread1->mShowCode = aSpecial;
   if (gMonitorThread2) gMonitorThread2->mShowCode = aSpecial;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void CmdLineExec::executeGo1 (Ris::CmdLineCmd* aCmd)
{
   Prn::print(0, "RingReader FAIL************");
   Prn::print(0, "mTestFailReadIndex %lld", 
      Some::gRingReaderThread->mRingReader.mTestFailReadIndex);

   for (int i = 0; i < 7; i++)
   {
      Prn::print(0, "mTestFailCode %d %lld", i, 
         Some::gRingReaderThread->mRingReader.mTestFailCode[i]);
   }
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void CmdLineExec::executeGo2 (Ris::CmdLineCmd* aCmd)
{
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void CmdLineExec::executeGo3 (Ris::CmdLineCmd* aCmd)
{
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void CmdLineExec::executeParms(Ris::CmdLineCmd* aCmd)
{
   Some::gRingParms.show();
}

//******************************************************************************
//******************************************************************************
//******************************************************************************



