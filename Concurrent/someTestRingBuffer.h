#pragma once

/*==============================================================================
Test ring buffer.
=============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "ccRingBuffer.h"
#include "someTestRecord.h"

//******************************************************************************
//******************************************************************************
//******************************************************************************

namespace Some
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Test ring buffer. This contains variables that describe a ring buffer
// and its state. It also contains non heap memory for the ring buffer
// storage. It is shared memory safe.

class TestRingBuffer : public CC::BaseRingBuffer
{
public:

   typedef CC::BaseRingBuffer BaseClass;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Constants.

   static const int cNumElements = 100;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   TestRecord mElementArrayMemory[cNumElements];

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // No constructor. This sets the base class variables.
   void initialize() override;

   // Return a pointer to an element, based on an index modulo
   // the number of elements.
   void* elementAt(long long aIndex) override;
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace

