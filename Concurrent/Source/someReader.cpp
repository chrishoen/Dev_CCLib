/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include <prnPrint.h>

#include "LFIntQueue.h"
#include "someReader.h"

// Global instance of the block pool

namespace Some
{


//******************************************************************************
//******************************************************************************
//******************************************************************************

Reader::Reader()
{
   initialize();
}

void Reader::initialize()
{
   mPassCount = 0;
   mFailCount = 0;
   mCodeSum   = 0;
}

void Reader::finalize()
{
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void Reader::show()
{
   Prn::print(0,"Reader.mPassCount %d",mPassCount);
   Prn::print(0,"Reader.mFailCount %d",mFailCount);
   Prn::print(0,"Reader.mCodeSum   %d",mCodeSum);
   Prn::print(0,"");
}
  
//******************************************************************************
//******************************************************************************
//******************************************************************************

void Reader::read(int aNumReads)
{
   for (int i = 0; i < aNumReads; i++)
   {
      IntMessage tMsg;

      if (LFIntQueue::tryRead(&tMsg.aint()))
      {
         mPassCount++;
         mCodeSum += tMsg.mCode;
      }
      else
      {
         mFailCount++;
      }
   }
}


   
}//namespace