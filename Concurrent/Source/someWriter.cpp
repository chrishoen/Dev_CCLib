/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include <prnPrint.h>

#include "LFIntQueue.h"
#include "someWriter.h"

// Global instance of the block pool

namespace Some
{


//******************************************************************************
//******************************************************************************
//******************************************************************************

Writer::Writer()
{
   initialize(0);
}

void Writer::initialize(unsigned aIdent)
{
   mIdent = aIdent;
   mCode = 0;

   mPassCount = 0;
   mFailCount = 0;
   mCodeSum   = 0;
}

void Writer::finalize()
{
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void Writer::show()
{
   Prn::print(0,"Writer.mPassCount %u",mPassCount);
   Prn::print(0,"Writer.mFailCount %u",mFailCount);
   Prn::print(0,"Writer.mCodeSum   %u",mCodeSum);
   Prn::print(0,"");
}
  
//******************************************************************************
//******************************************************************************
//******************************************************************************

void Writer::write(int aNumWrites)
{
   for (int i = 0; i < aNumWrites; i++)
   {
      mCode++;
      IntMessage tMsg(mIdent,mCode);

      if (LFIntQueue::tryWrite(tMsg.aint()))
      {
         mPassCount++;
         mCodeSum += mCode;
      }
      else
      {
         mFailCount++;
      }
   }
}


   
}//namespace