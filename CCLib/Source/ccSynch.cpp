/*==============================================================================
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include <windows.h> 

#include <stdio.h>
#include <assert.h>
#include "ccSynch.h"

#pragma unmanaged

namespace CC
{

//******************************************************************************
//******************************************************************************
//******************************************************************************

class MutexSemaphore::Specific
{
public:
   SRWLOCK mSRWLock;
};

//******************************************************************************

MutexSemaphore::MutexSemaphore() 
{
   mSpecific = new Specific;
   InitializeSRWLock(&mSpecific->mSRWLock); 
}

//******************************************************************************

MutexSemaphore::~MutexSemaphore() 
{
   delete mSpecific;
}

//******************************************************************************

void MutexSemaphore::lock()
{
   AcquireSRWLockExclusive(&mSpecific->mSRWLock);
}

//******************************************************************************

void MutexSemaphore::unlock()
{
   ReleaseSRWLockExclusive(&mSpecific->mSRWLock); 
}

}//namespace

